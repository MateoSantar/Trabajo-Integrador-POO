/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import models.*;
/**
 *
 * @author Mateo Santarsiero 
 */
public class MainView extends javax.swing.JFrame {

    /**
     * Creates new form MainView
     */
    private final Connection conn;
    private RoomDao rooms;
    private ClientDao clients;
    private ReservationDao reservs;
    /**
     *
     * @param conn
     */
    public MainView(Connection conn) {
        this.conn = conn;
        rooms = new RoomDao(conn);
        clients = new ClientDao(conn);
        reservs = new ReservationDao(conn);
        initComponents();
        removeDefaultRows();
        loadReservations();
        centerWindow(this);
        
    }
    
    /**
     *
     * @param window
     */
    public static void centerWindow(JFrame window) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (screenSize.width - window.getWidth()) / 2;
        int y = (screenSize.height - window.getHeight()) / 2;
        window.setLocation(x, y);
    }

    private void loadReservations(){ 
        DefaultTableModel model = (DefaultTableModel) reservationsTable.getModel();
        ArrayList<Room> roomsAL = (ArrayList)rooms.getAll();
        ArrayList<Client> clientsAL = (ArrayList)clients.getAll();
        ArrayList<Reservation> reservationsAL = (ArrayList)reservs.getAll();
        for (Reservation reservation : reservationsAL) {
            Object[] data = new Object[7];
            data[0] = String.valueOf(reservation.getID());
            data[1] = getClientName(reservation.getIdClient());
            data[2] = getRoomCategory(reservation.getRoomNumber());
            data[3] = String.valueOf(reservation.getRoomNumber());
            data[4] = String.valueOf(getRoomPrice(reservation.getRoomNumber()));
            data[5] = reservation.getStartDate().toString();
            data[6] = reservation.getEndDate().toString();
            model.addRow(data);
        }
        
        
    }
    
    private String getClientName(int id){
        for (Client c : clients.getAll()) {
            if (c.getID() == id) {
                return c.getName();
            }
        }
        return null;
    }
    
    private String getRoomCategory(int roomNumber){
        for (Room r : rooms.getAll()){
            if (r.getRoomNumber() == roomNumber) {
                return r.getCategory();
            }
        }
        return null;
    }
    
    private double getRoomPrice(int roomNumber){
        for (Room r : rooms.getAll()){
            if (r.getRoomNumber() == roomNumber) {
                return r.getPrice();
            }
        }
        return -1;
    }
     
        

    
    
    
    
    private void removeDefaultRows(){
        DefaultTableModel model = (DefaultTableModel) reservationsTable.getModel();
        for (int i = 0; i < 4; i++) {
            model.removeRow(0);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RightClickMenu = new javax.swing.JPopupMenu();
        Update_Menu_Item = new javax.swing.JMenuItem();
        Delete_Menu_Item = new javax.swing.JMenuItem();
        deleteBtn = new javax.swing.JButton();
        reserveBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationsTable = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        searchTextField = new java.awt.TextField();
        searchBtn1 = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();

        Update_Menu_Item.setText("Editar");
        RightClickMenu.add(Update_Menu_Item);

        Delete_Menu_Item.setText("Eliminar");
        RightClickMenu.add(Delete_Menu_Item);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main View");
        setResizable(false);

        deleteBtn.setText("Eliminar");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        reserveBtn.setText("Reservar");
        reserveBtn.setToolTipText("Agrega una reserva");
        reserveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveBtnActionPerformed(evt);
            }
        });

        reservationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Categoria", "Numero", "Precio", "Inicio", "Fin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reservationsTable.setComponentPopupMenu(RightClickMenu);
        reservationsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        reservationsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(reservationsTable);
        if (reservationsTable.getColumnModel().getColumnCount() > 0) {
            reservationsTable.getColumnModel().getColumn(0).setResizable(false);
            reservationsTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            reservationsTable.getColumnModel().getColumn(1).setResizable(false);
            reservationsTable.getColumnModel().getColumn(2).setResizable(false);
            reservationsTable.getColumnModel().getColumn(3).setResizable(false);
            reservationsTable.getColumnModel().getColumn(4).setResizable(false);
            reservationsTable.getColumnModel().getColumn(5).setResizable(false);
            reservationsTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Categoria", "Cliente" }));
        jComboBox1.setToolTipText("");

        searchBtn1.setText("Buscar");

        updateBtn.setText("Actualizar");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reserveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn1)
                        .addGap(33, 33, 33)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteBtn)
                        .addComponent(reserveBtn)
                        .addComponent(updateBtn)
                        .addComponent(searchBtn1)
                        .addComponent(jComboBox1))
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reserveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveBtnActionPerformed
        AddReservationView arv = new AddReservationView(true,reservationsTable,this,rooms,reservs, clients);
        arv.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_reserveBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int selectedRow = reservationsTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione una reserva");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) reservationsTable.getModel();
        int columnCount = model.getColumnCount();
        Object[] row = new Object[columnCount];
        for (int i = 0; i < columnCount; i++) {
            row[i] = model.getValueAt(selectedRow, i);
        }
        AddReservationView arv = new AddReservationView(false, reservationsTable, row,this,rooms,reservs,clients);
        arv.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int selectedRow = reservationsTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una reserva");
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel) reservationsTable.getModel();
        reservs.delete(reservs.Get(Long.parseLong(String.valueOf(dtm.getValueAt(selectedRow, 0)))));
        JOptionPane.showMessageDialog(null, "Eliminado");
        dtm.removeRow(selectedRow);
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Delete_Menu_Item;
    private javax.swing.JPopupMenu RightClickMenu;
    private javax.swing.JMenuItem Update_Menu_Item;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable reservationsTable;
    private javax.swing.JButton reserveBtn;
    private javax.swing.JButton searchBtn1;
    private java.awt.TextField searchTextField;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
