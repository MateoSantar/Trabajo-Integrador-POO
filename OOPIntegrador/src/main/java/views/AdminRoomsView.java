/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.table.DefaultTableModel;
import models.ReservationDao;
import models.Room;
import models.RoomDao;
import models.Utils;

/**
 *
 * @author idra1
 */
public class AdminRoomsView extends javax.swing.JFrame {

    /**
     * Creates new form AddRoomView
     */
    private final ReservationDao reservs;
    private final RoomDao rooms;
    private final DefaultTableModel mainTable;
    private final AddReservationView arv;

    public AdminRoomsView(ReservationDao reservs, RoomDao rooms, DefaultTableModel mainTable, AddReservationView arv) {
        initComponents();
        this.reservs = reservs;
        this.rooms = rooms;
        this.mainTable = mainTable;
        this.arv = arv;
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowClosingEvent();
        loadRooms();
        Utils.centerWindow(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        roomsTable = new javax.swing.JTable();
        addRoomBtn = new javax.swing.JButton();
        editRoomBtn = new javax.swing.JButton();
        removeRoomBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        roomsTable.setAutoCreateRowSorter(true);
        roomsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Número", "Categoría", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        roomsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        roomsTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(roomsTable);
        roomsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (roomsTable.getColumnModel().getColumnCount() > 0) {
            roomsTable.getColumnModel().getColumn(0).setResizable(false);
            roomsTable.getColumnModel().getColumn(1).setResizable(false);
            roomsTable.getColumnModel().getColumn(2).setResizable(false);
            roomsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        addRoomBtn.setText("Nueva");
        addRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomBtnActionPerformed(evt);
            }
        });

        editRoomBtn.setText("Editar");
        editRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRoomBtnActionPerformed(evt);
            }
        });

        removeRoomBtn.setText("Eliminar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addRoomBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editRoomBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeRoomBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomBtn)
                    .addComponent(editRoomBtn)
                    .addComponent(removeRoomBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadRooms() {
        DefaultTableModel roomTable = (DefaultTableModel) this.roomsTable.getModel();
        for (Room r : rooms.getAll()) {
            Object[] actRoom = new Object[4];
            actRoom[0] = r.getID();
            actRoom[1] = r.getRoomNumber();
            actRoom[2] = r.getCategory();
            actRoom[3] = r.getPrice();
            roomTable.addRow(actRoom);
        }
    }

    private void addWindowClosingEvent() {
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                arv.setEnabled(true);
                dispose();

            }
        });
    }
    private void editRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRoomBtnActionPerformed
        int selectedRow = roomsTable.getSelectedRow();
        if (selectedRow == -1) {
            Utils.ShowInfo("Seleccione una habitación");
            return;
        }
        addRoomView arv = new addRoomView(rooms, this);
        DefaultTableModel roomTableModel = (DefaultTableModel) roomsTable.getModel();
        Object[] actualRoom = new Object[4];
        for (int i = 0; i < roomTableModel.getColumnCount(); i++) {
            actualRoom[i] = roomTableModel.getValueAt(selectedRow, i);
        }
        int actualRoomId = (int) actualRoom[0];
        int actualRoomNumber = (int) actualRoom[1];
        String actualRoomCategory = (String) actualRoom[2];
        double actualRoomPrice = (double) actualRoom[3];
        arv.fillFieldsOnEdit(new Room(actualRoomId,actualRoomCategory,actualRoomPrice,actualRoomNumber)); //COMPLETAR VERIFICACIONES
        this.setEnabled(false);
        arv.setVisible(true);
    }//GEN-LAST:event_editRoomBtnActionPerformed

    private void addRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomBtnActionPerformed
        addRoomView arv = new addRoomView(rooms, this);
        this.setEnabled(false);
        arv.setVisible(true);
    }//GEN-LAST:event_addRoomBtnActionPerformed

    public void addRoom(Room r) {
        DefaultTableModel roomTable = (DefaultTableModel) this.roomsTable.getModel();
        Object[] actRoom = new Object[4];

        actRoom[0] = r.getID();
        actRoom[1] = r.getRoomNumber();
        actRoom[2] = r.getCategory();
        actRoom[3] = r.getPrice();
        roomTable.addRow(actRoom);
        arv.resetRoomNumbersMap();
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoomBtn;
    private javax.swing.JButton editRoomBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeRoomBtn;
    private javax.swing.JTable roomsTable;
    // End of variables declaration//GEN-END:variables
}
